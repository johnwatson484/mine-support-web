# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  azureContainerRegistry: MineSupport
  azureContainerRegistryFull: MineSupport.azurecr.io
  azureSubscriptionEndpoint: MineSupport
  azureResourceGroup: MineSupport
  imageName: mine-support-web

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'SonarQube'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'mine-support-web'
    cliProjectName: 'mine-support-web'
    cliSources: '.'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: SonarQubeAnalyze@4
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: SonarQubePublish@4
  inputs:
    pollingTimeoutSec: '300'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: DockerCompose@0
  inputs:
    action: Build services
    containerregistrytype: Azure Container Registry
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistryFull)
    dockerComposeFile: docker-compose.yaml
    projectName: $(Build.Repository.Name)
    qualifyImageNames: true
  displayName: build base image

- task: DockerCompose@0
  inputs:
    action: Push services
    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
    azureContainerRegistry: $(azureContainerRegistryFull)
    dockerComposeFile: docker-compose.yaml
    qualifyImageNames: true
  displayName: Push container to registry

- task: AzureCLI@1
  inputs:
    azureSubscription: $(azureSubscriptionEndpoint)
    scriptLocation: inlineScript
    inlineScript: |
      helm init -c
      az configure --defaults acr=$(azureContainerRegistry)
      az acr helm repo add
      helm package ./helm/mine-support-web --save
      packageFile=`ls mine-support-web-* |  xargs echo`
      az acr helm push --force $packageFile
      az acr helm list
    failOnStandardError: false
  displayName: add Helm chart to registry

