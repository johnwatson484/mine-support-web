apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicas }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  strategy: {}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
      annotations:
        redeployOnChange: "{{ .Values.container.redeployOnChange }}"
    spec:
      restartPolicy: {{ .Values.container.restartPolicy }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
      {{- end }}
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.image }}
        {{- if .Values.container.command }}
        {{- with .Values.container.command }}
        command:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.container.args }}
        args:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- end }}
        imagePullPolicy: {{ .Values.container.imagePullPolicy }}
        securityContext:
          runAsUser: {{ .Values.container.runAsUser }}
          runAsNonRoot: {{ .Values.container.runAsNonRoot }}
          readOnlyRootFilesystem: {{ .Values.container.readOnlyRootFilesystem }}
          allowPrivilegeEscalation: {{ .Values.container.allowPrivilegeEscalation }}
        env:
        - name: NODE_ENV
          value: {{ .Values.environment }}
        - name: MESSAGE_HOST
          value: {{ .Values.container.messageHost }}
        - name: MESSAGE_PORT
          value: {{ .Values.container.messagePort | quote }}
        - name: MESSAGE_TRANSPORT
          value: {{ .Values.container.messageTransport }}
        - name: CLAIM_MESSAGE_USERNAME
          value: {{ .Values.container.claimMessageUsername }}
        - name: CLAIM_MESSAGE_PASSWORD
          value: {{ .Values.container.claimMessagePassword }}
        - name: PORT
          value: "3000"        
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        resources:
          requests:
            memory: {{ .Values.container.requestMemory }}
            cpu: {{ .Values.container.requestCpu }}
          limits:
            memory: {{ .Values.container.limitMemory }}
            cpu: {{ .Values.container.limitCpu }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: {{ .Values.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.readinessProbe.port }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
